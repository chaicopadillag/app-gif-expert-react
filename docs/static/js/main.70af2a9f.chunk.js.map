{"version":3,"sources":["components/AddCategory.js","api/getGifs.js","components/ItemGifGrit.js","components/GridGif.js","hooks/useGetGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputCategoria","setInputCategoria","method","onSubmit","e","preventDefault","cats","alert","type","onChange","target","value","placeholder","getGifs","categoria","a","API","encodeURI","process","fetch","respuesta","json","data","imagenes","map","img","id","title","url","images","downsized_medium","ItemGifGrit","className","src","alt","GridGif","loading","estadoGifs","setEstadoGifs","then","gifs","useGetGifs","gif","GitExpertApp","categorias","cat","ReactDOM","render","document","getElementById"],"mappings":"mMAyBeA,EAvBK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACEC,mBAAS,IADX,mBACnCC,EADmC,KACnBC,EADmB,KAc1C,OACC,sBAAMC,OAAO,OAAOC,SAVA,SAACC,GACrBA,EAAEC,iBACqB,KAAnBL,GACHF,GAAc,SAACQ,GAAD,OAAWN,GAAX,mBAA8BM,OAC5CL,EAAkB,KAElBM,MAAM,6BAIP,SACC,uBAAOC,KAAK,OAAOC,SAdS,SAACL,GAC9BH,EAAkBG,EAAEM,OAAOC,QAa0BA,MAAOX,EAAgBY,YAAY,iB,+BClB7EC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EADgB,iDACgCC,UAAUH,GAD1C,oBACgEI,mCADhE,sBAGEC,MAAMH,GAHR,cAGhBI,EAHgB,gBAICA,EAAUC,OAJX,uBAIdC,EAJc,EAIdA,KACFC,EAAWD,EAAKE,KAAI,SAACC,GAC1B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAKH,EAAII,OAAOC,iBAAiBF,QATb,kBAYfL,GAZe,4CAAH,sDCWLQ,EATK,SAAC,GAAoB,IAAlBJ,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC7B,OACC,sBAAKI,UAAU,yCAAf,UACC,qBAAKC,IAAKL,EAAKM,IAAKP,IACpB,4BAAIA,QCiBQQ,EAlBC,SAAC,GAAmB,IAAjBrB,EAAgB,EAAhBA,UAAgB,ECFT,SAACA,GAAe,IAAD,EACJf,mBAAS,CAC5CuB,KAAM,GACNc,SAAS,IAH8B,mBACjCC,EADiC,KACrBC,EADqB,KAWxC,OANAzB,EAAQC,GAAWyB,MAAK,SAACC,GACxBF,EAAc,CACbhB,KAAMkB,EACNJ,SAAS,OAGJC,EDRyBI,CAAW3B,GAA7B0B,EADoB,EAC1BlB,KAAYc,EADc,EACdA,QACpB,OACC,qCACC,qBAAIJ,UAAU,oCAAd,cAAoDlB,KACpD,mBAAGkB,UAAU,mCAAb,SAAiDI,EAAU,cAAgB,eAC3E,qBAAKJ,UAAU,YAAf,SACEQ,EAAKhB,KAAI,SAACkB,GAAD,OACT,cAAC,EAAD,eAA8BA,GAAZA,EAAIhB,aEMZiB,EAfM,WAAO,IAAD,EACU5C,mBAAS,CAAC,WADpB,mBACnB6C,EADmB,KACP9C,EADO,KAE1B,OACC,qCACC,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,8BACE8C,EAAWpB,KAAI,SAACqB,GAAD,OACf,cAAC,EAAD,CAAmB/B,UAAW+B,GAAhBA,Y,MCRnBC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.70af2a9f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nconst AddCategory = ({ setCategorias }) => {\n\tconst [inputCategoria, setInputCategoria] = useState('');\n\tconst handleCateogriaChange = (e) => {\n\t\tsetInputCategoria(e.target.value);\n\t};\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif (inputCategoria !== '') {\n\t\t\tsetCategorias((cats) => [inputCategoria, ...cats]);\n\t\t\tsetInputCategoria('');\n\t\t} else {\n\t\t\talert('Ingrese una categor√≠a');\n\t\t}\n\t};\n\treturn (\n\t\t<form method=\"POST\" onSubmit={handleSubmit}>\n\t\t\t<input type=\"text\" onChange={handleCateogriaChange} value={inputCategoria} placeholder=\"Buscar...\" />\n\t\t</form>\n\t);\n};\nAddCategory.propTypes = {\n\tsetCategorias: PropTypes.func.isRequired,\n};\nexport default AddCategory;\n","export const getGifs = async (categoria) => {\n\tconst API = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&api_key=${process.env.REACT_APP_API_KEY}&limit=10`;\n\n\tconst respuesta = await fetch(API);\n\tconst { data } = await respuesta.json();\n\tconst imagenes = data.map((img) => {\n\t\treturn {\n\t\t\tid: img.id,\n\t\t\ttitle: img.title,\n\t\t\turl: img.images.downsized_medium.url,\n\t\t};\n\t});\n\treturn imagenes;\n};\n","import React from 'react';\n\nconst ItemGifGrit = ({ title, url }) => {\n\treturn (\n\t\t<div className=\"card animate__animated animate__fadeIn\">\n\t\t\t<img src={url} alt={title} />\n\t\t\t<p>{title}</p>\n\t\t</div>\n\t);\n};\n\nexport default ItemGifGrit;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGetGifs } from '../hooks/useGetGifs';\nimport ItemGifGrit from './ItemGifGrit';\n\nconst GridGif = ({ categoria }) => {\n\tconst { data: gifs, loading } = useGetGifs(categoria);\n\treturn (\n\t\t<>\n\t\t\t<h2 className=\"animate__animated animate__fadeIn\"> {categoria}</h2>\n\t\t\t<p className=\"animate__animated animate__flash\">{loading ? 'Cargando...' : 'Cargado!!!'}</p>\n\t\t\t<div className=\"card-grid\">\n\t\t\t\t{gifs.map((gif) => (\n\t\t\t\t\t<ItemGifGrit key={gif.id} {...gif} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</>\n\t);\n};\nGridGif.propTypes = {\n\tcategoria: PropTypes.string.isRequired,\n};\n\nexport default GridGif;\n","import { useState } from 'react';\nimport { getGifs } from '../api/getGifs';\n\nexport const useGetGifs = (categoria) => {\n\tconst [estadoGifs, setEstadoGifs] = useState({\n\t\tdata: [],\n\t\tloading: true,\n\t});\n\tgetGifs(categoria).then((gifs) => {\n\t\tsetEstadoGifs({\n\t\t\tdata: gifs,\n\t\t\tloading: false,\n\t\t});\n\t});\n\treturn estadoGifs;\n};\n","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GridGif from './components/GridGif';\n\nconst GitExpertApp = () => {\n\tconst [categorias, setCategorias] = useState(['Terror']);\n\treturn (\n\t\t<>\n\t\t\t<h2>Git Expert App</h2>\n\t\t\t<AddCategory setCategorias={setCategorias} />\n\t\t\t<hr />\n\t\t\t<div>\n\t\t\t\t{categorias.map((cat) => (\n\t\t\t\t\t<GridGif key={cat} categoria={cat} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</>\n\t);\n};\nexport default GitExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GitExpertApp from './GitExpertApp';\nimport './index.css';\n\nReactDOM.render(<GitExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}